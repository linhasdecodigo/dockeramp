name: ${PROJECT_NAME}

services:
  web:
    build:
      context: ./services/php-apache/${PHP_VERSION}
      args:
        - HOST_USER_ID=${HOST_USER_ID}
        - HOST_GROUP_ID=${HOST_GROUP_ID}
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-web:php-${PHP_VERSION}-apache
    container_name: ${PROJECT_NAME}-web
    restart: unless-stopped
    volumes:
      - ${APP_PATH}:/var/www
      - ${STORAGE_PATH}:/mnt/storage
      - ${APACHE_CONFIG_PATH}:/tmp/apache
      - ${PHP_CONFIG_PATH}:/tmp/php
      - ${CRON_CONFIG_PATH}:/tmp/cron
    ports:
      - "${WEB_PORT}:80"
      - "${WEB_SSL_PORT}:443"

  db:
    build:
      context: ./services/${DB_TYPE}/${DB_VERSION}
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-db:${DB_TYPE}-${DB_VERSION}
    container_name: ${PROJECT_NAME}-db
    restart: unless-stopped
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    volumes:
      - ${DB_PATH}:/var/lib/mysql

  redis:
    build:
      context: ./services/redis/${REDIS_VERSION}
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-redis:redis-${REDIS_VERSION}
    container_name: ${PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_PATH}:/data
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    profiles:
      - redis
